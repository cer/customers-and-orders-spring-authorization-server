plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

apply plugin: DockerBuildLocallyPlugin

group = 'io.eventuate.tram.examples.customersandorders.springauthorizationserver'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.apache.commons:commons-compress:1.23.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly "io.eventuate.examples.dockerimages:eventuate-examples-docker-images:$eventuateDockerImagesVersion"

	testRuntimeOnly "io.eventuate.examples.dockerimages:eventuate-examples-docker-images:$eventuateDockerImagesVersion"
	testImplementation platform('org.testcontainers:testcontainers-bom:1.19.6')
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'io.rest-assured:rest-assured:5.3.0'
}

test {
	useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.test.output.classesDirs
	classpath = sourceSets.test.runtimeClasspath

	useJUnitPlatform()
	include '**/*DockerImageTest*'

	systemProperty 'dockerImage', project.findProperty('dockerImage') ?: ''

}

tasks.register('testAll') {
    description = 'Runs test, buildDockerImageLocally, and integrationTest tasks in order'
    group = 'verification'
	dependsOn test
	dependsOn buildDockerImageLocally
	dependsOn integrationTest
}


buildDockerImageLocally.mustRunAfter test
integrationTest.mustRunAfter buildDockerImageLocally
